/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
const songModelUrl = `${process.env.REACT_APP_MODELS_BUCKET}/glbs/vinyl2.glb`;

export default function Vinyl(props) {
  const { nodes, materials } = useGLTF(songModelUrl);
  const mesh = useRef();
  const [hovered, setHovered] = useState(false);

  useFrame((state, delta) => {
    if (hovered) {
      mesh.current.rotation.y += delta*0.5;
    } else if (mesh.current.rotation.y > 0.01) {
      mesh.current.rotation.y -= delta;
    }
  });

  return (
    <group
      {...props}
      ref={mesh}
      dispose={null}
      onPointerOver={ e => {
        e.stopPropagation();
        setHovered(true);
      }}
      onPointerOut={() => setHovered(false)}
    >
      <mesh
        geometry={nodes.vinyl.geometry}
        material={materials.vynil_complete}
        scale={3}
      />
    </group>
  );
}

useGLTF.preload(songModelUrl);
