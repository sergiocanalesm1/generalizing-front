/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export default function Video(props) {
  const { nodes, materials } = useGLTF("/models/video.glb");
  const mesh = useRef();
  const [hovered, setHovered] = useState(false);

  useFrame((state, delta) => {
    if (hovered) {
      mesh.current.rotation.y += delta;
    } else if (mesh.current.rotation.y > 0.01) {
      mesh.current.rotation.y -= delta;
    }
  });

  return (
    <group
      {...props}
      ref={mesh}
      dispose={null}
      scale={0.7}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
    >
      <group
        position={[1, 0.09, -0.16]}
        rotation={[0, Math.PI / 4, 0]}
        scale={[0.09, 0.02, 0.09]}
      >
        <mesh geometry={nodes.Cube011.geometry} material={materials.keyboard} />
        <mesh
          geometry={nodes.Cube011_1.geometry}
          material={nodes.Cube011_1.material}
        />
        <mesh geometry={nodes.Cube011_2.geometry} material={materials.play} />
        <mesh
          geometry={nodes.Cube011_3.geometry}
          material={materials["Material.001"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/video.glb");
