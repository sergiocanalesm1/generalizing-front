/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';

export default function Videogame(props) {
  const { nodes, materials } = useGLTF('/models/videogame.glb');
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cyl_right.geometry}
        material={materials.main}
        position={[1.95, 0.1, 0.46]}
        rotation={[Math.PI, 1.57, 0]}
        scale={[0.66, 0.06, 0.66]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.body.geometry}
        material={materials.main}
        position={[0.76, 0.1, 0.41]}
        rotation={[-Math.PI, 1.57, 3.14]}
        scale={[-0.6, -0.06, -1.19]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cyl_left.geometry}
        material={materials.main}
        position={[-0.44, 0.1, 0.48]}
        rotation={[Math.PI, 1.57, 0]}
        scale={[0.66, 0.06, 0.66]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.start_left.geometry}
        material={materials['black buttons']}
        position={[0.51, 0.17, 0.59]}
        rotation={[0, 0.8, -Math.PI]}
        scale={[0.13, 0.01, 0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.start_right.geometry}
        material={materials['black buttons']}
        position={[0.88, 0.17, 0.59]}
        rotation={[0, 0.8, -Math.PI]}
        scale={[0.13, 0.01, 0.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.lz.geometry}
        material={materials.z}
        position={[-0.19, 0.1, -0.18]}
        rotation={[-Math.PI, 1.56, 0.1]}
        scale={[0.02, 0.06, 0.3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.rz.geometry}
        material={materials.z}
        position={[1.68, 0.1, -0.19]}
        rotation={[0, -1.57, -3.14]}
        scale={[0.02, 0.06, 0.3]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.movement.geometry}
        material={materials['black buttons']}
        position={[-0.45, 0.15, 0.51]}
        rotation={[3.14, -0.01, 0]}
        scale={[0.1, 0.04, 0.24]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.cyl_right_inside.geometry}
        material={materials['cyl right inside']}
        position={[1.95, 0.1, 0.46]}
        rotation={[Math.PI, 1.57, 0]}
        scale={[0.66, 0.06, 0.66]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_base_up_2.geometry}
        material={materials.main}
        position={[1.85, 0.17, 0.32]}
        rotation={[0, 0.76, -Math.PI]}
        scale={[0.34, 0.07, 0.15]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_x.geometry}
        material={materials['xy but']}
        position={[2, 0.17, 0.18]}
        rotation={[Math.PI, 1.56, 0]}
        scale={[0.1, 0.03, 0.1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_y.geometry}
        material={materials['xy but']}
        position={[1.7, 0.17, 0.46]}
        rotation={[Math.PI, 1.56, 0]}
        scale={[0.1, 0.03, 0.1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_base_down.geometry}
        material={materials.main}
        position={[2.07, 0.17, 0.66]}
        rotation={[0, 0.76, -Math.PI]}
        scale={[0.34, 0.07, 0.15]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_a.geometry}
        material={materials['ab but']}
        position={[2.22, 0.17, 0.52]}
        rotation={[Math.PI, 1.56, 0]}
        scale={[0.1, 0.03, 0.1]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.but_b.geometry}
        material={materials['ab but']}
        position={[1.92, 0.17, 0.8]}
        rotation={[Math.PI, 1.56, 0]}
        scale={[0.1, 0.03, 0.1]}
      />
    </group>
  );
}

useGLTF.preload('/models/videogame.glb');
