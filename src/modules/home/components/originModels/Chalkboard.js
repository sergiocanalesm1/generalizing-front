/*
Auto-generated by: https://github.com/pmndrs/gltfjsx 
https://gltf.pmnd.rs/
*/

import React, { useRef, useState } from 'react';
import { useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';

export default function Chalkboard(props) {

  const { nodes, materials } = useGLTF('/models/chalkboard2.glb');
  const mesh = useRef();
  const [hovered, setHovered] = useState(false);

  useFrame((state, delta) => {
    if( hovered ){
      mesh.current.rotation.z += delta
    }
    else if(mesh.current.rotation.z > 0.01 ){
      mesh.current.rotation.z -= delta
    }
  })

  return (
    <group 
      {...props} 
      ref={mesh}
      dispose={null}
      onPointerOver={() => setHovered(true)}
      onPointerOut={() => setHovered(false)}
    >
      <group scale={[2.2, 1, 1]}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001.geometry}
          material={materials.board}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001_1.geometry}
          material={materials.border}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/models/chalkboard2.glb');
